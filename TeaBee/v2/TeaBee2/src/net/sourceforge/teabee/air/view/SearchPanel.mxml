<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas 
	width="100%"
	xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:controls="com.adobe.controls.*">
	
	<mx:Style>
		
		Button.prevNext {
		   cornerRadius: 15;
		   borderColor: #333333;
		   highlightAlphas: #000000, #000000;
		   color: #ffffff;
		   themeColor: #333333;
		}
				
	</mx:Style>
	
	<mx:Script>
		<![CDATA[
			import net.sourceforge.teabee.air.search.SearchResult;
			
			[Bindable] private var listData: Array = [ ];
			
			private function setListData(result: SearchResult): void {
				
				this.pagedList.dataProvider = result.videos.toArray();
			}
			
		]]>
	</mx:Script>
	
	<mx:Script>
		<![CDATA[
			import net.sourceforge.teabee.air.search.SearchResultVideo;
			import net.sourceforge.teabee.air.search.SearchResult;
			import net.sourceforge.teabee.air.search.SearchQuery;
			import net.sourceforge.teabee.air.search.SearchService;
			import mx.messaging.channels.AMFChannel;
			import mx.messaging.ChannelSet;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.events.FaultEvent;
			
			private const searchService: SearchService = new SearchService();
			
			private function onSearch():void {
				// SearchResult doSearch(final SearchQuery query);
				const searchTerm: String = this.inpSearchTerm.text;
				if(searchTerm.length == 0) {
					return; // ignore enter hits if textfield is empty
				}
				trace("invoking rpc method with term [" + searchTerm + "]...");
				var query: SearchQuery = new SearchQuery();
				query.startIndex = 1;
				query.maxResults = 10;
				query.searchTerm = searchTerm;
				this.searchService.search(query, this.onResult);
			}
			
			private function onResult(result: SearchResult): void {
				//this.searchPanel.listData = result.videos.toArray();
				this.setListData(result);
				/*
				for each(var video: SearchResultVideo in result.videos) {
					trace("title: " + video.title);
				}
				*/
			}
		]]>
	</mx:Script>
	
	
	
	
	<mx:VBox width="100%">
	
		<mx:HBox>
			<mx:TextInput id="inpSearchTerm" enter="onSearch()" />
			<mx:Button label="search" click="onSearch()" enabled="{this.inpSearchTerm.text.length > 0}" />
			
			<mx:Spacer width="50" />
			
			<mx:Button label="prev" click="{pagedList.currentPage--}" enabled="{pagedList.currentPage != 0}" styleName="prevNext" />
			<mx:Button label="next" click="{pagedList.currentPage++}" enabled="{pagedList.currentPage &lt; (pagedList.totalPages-1)}" styleName="prevNext" />
			
			<controls:PagedListAffordance id="scroller" width="300" height="20"
				currentPage="{pagedList.currentPage}" numberOfPages="{pagedList.totalPages}" />
			
		</mx:HBox>
	
		<controls:PagedList id="pagedList"
			height="50" width="100%"
			itemRenderer="net.sourceforge.teabee.air.view.SearchItemRenderer"
			currentPage="{scroller.currentPage}" dataProvider="{this.listData}" />
	
	</mx:VBox>
	
</mx:Canvas>
