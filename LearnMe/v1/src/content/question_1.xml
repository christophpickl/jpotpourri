<?xml version="1.0" encoding="UTF-8"?>

<QuestionCatalog title="Declarations and Access Control">
    <!--
    <!-- *************************************************** x *************************************************** --
    <Question type="MultipleChoice" title="XX">
        <Text><![CDATA[
            XXX
            ]]></Text>
        <Answers>
            <Answer message="XXXX"><![CDATA[
                <code>XXXX</code>
            ]]></Answer>
            <Answer correct="true" message="XXXX"><![CDATA[
                <code>XXXX</code>
            ]]></Answer>
        </Answers>
    </Question>
    
    <!-- *************************************************** x *************************************************** --
    <Question type="SingleChoice" title="Another Title">
        <Text>Are you crazy</Text>
        <Answers>
            <Answer>No</Answer> ... correct=false by default
            <Answer correct="true">Yes</Answer>
        </Answers>
    </Question>
    -->
    
    <!-- *************************************************** 1 *************************************************** -->
	<Question type="MultipleChoice" title="Interface Implementation">
		<Text><![CDATA[
			Given the following,<br />
			<code>
				1. interface Base {<br />
				2. &nbsp;&nbsp;boolean m1();<br />
				3. &nbsp;&nbsp;byte m2(short s);<br />
				4. }
			</code>
			Which code fragments will compile?]]></Text>
		<Answers>
			<Answer message="Interfaces don't implement anything."><![CDATA[
				<code>interface Base2 implements Base { }</code>
			]]></Answer>
			<Answer message="Classes don't extend interfaces."><![CDATA[
				<code>abstract class Class2 extends Base { }<br />
					  public boolean m1() { return true; } }</code>
			]]></Answer>
			<Answer correct="true" message="An abstract class doesn't have to implement any or all of its interface's methods"><![CDATA[
				<code>abstract class Class2 implements Base { }</code>
			]]></Answer>
			<Answer correct="true" message="The method is correctly implemented."><![CDATA[
				<code>abstract class Class2 implements Base {<br />
				public boolean m1() { return (true); } }</code>
			]]></Answer>
			<Answer message="Interface methods are implicitly public, so the methods being impleted must be public."><![CDATA[
				<code>class Class2 implements Base {<br />
				boolean m1() { return false; }<br />
				byte m2(short s) { return 42; } }</code>
			]]></Answer>
		</Answers>
	</Question>
	
    <!-- *************************************************** 2 *************************************************** -->
    <Question type="MultipleChoice" title="Abstract Class">
        <Text><![CDATA[
            Which declare a compilable <code>abstract</code> class?
            ]]></Text>
        <Answers>
            <Answer message="Abstract methods must be marked as such."><![CDATA[
                <code>public abstract class Canine { public void speak(); }</code>
            ]]></Answer>
            <Answer correct="true" message="Abstract classes don't have to have any abstract methods."><![CDATA[
                <code>public abstract class Canine { public void speak() { } }</code>
            ]]></Answer>
            <Answer message="You can't have an abstract method unless the class is abstract."><![CDATA[
                <code>public class Canine { public abstract void speak(); }</code>
            ]]></Answer>
            <Answer message="The keyword abstract must come before the class name."><![CDATA[
                <code>public class Canine abstract { public abstract void speak(); }</code>
            ]]></Answer>
        </Answers>
    </Question>
    
    <!-- *************************************************** 3 *************************************************** -->
    <Question type="MultipleChoice" title="Extending and Implementing">
        <Text><![CDATA[
            Which is true?
            ]]></Text>
        <Answers>
            <Answer message="Classes implement interfaces, they don't extend them."><![CDATA[
                "X extends Y" is correct, if and only if X is a class and Y is an interface.
            ]]></Answer>
            <Answer message="Interfaces only inherit from other interfaces."><![CDATA[
                "X extends Y" is correct, if and only if X is an interface and Y is a class.
            ]]></Answer>
            <Answer correct="true" message="Correct."><![CDATA[
                "X extends Y" is correct, if X and Y are either both classes or both interfaces.
            ]]></Answer>
            <Answer message="Classes only extend classes, and interfaces only extend interfaces."><![CDATA[
                "X extends Y" is correct for all combinations of X and Y being classes and/or interfaces.
            ]]></Answer>
        </Answers>
    </Question>
    
    <!-- *************************************************** 4 *************************************************** -->
    <Question type="MultipleChoice" title="Valid Declaration">
        <Text><![CDATA[
            Which are valid declarations?
            ]]></Text>
        <Answers>
            <Answer correct="true"  message="Legal."><![CDATA[
                <code>int $x;</code>
            ]]></Answer>
            <Answer message="An identifier can't start with a digit."><![CDATA[
                <code>int 123;</code>
            ]]></Answer>
            <Answer correct="true"  message="Legal."><![CDATA[
                <code>int _123;</code>
            ]]></Answer>
            <Answer message="Identifiers must start with $, _, or a letter."><![CDATA[
                <code>int #dim;</code>
            ]]></Answer>
            <Answer message="Identifiers must start with $, _, or a letter."><![CDATA[
                <code>int %percent;</code>
            ]]></Answer>
            <Answer message="Identifiers must start with $, _, or a letter."><![CDATA[
                <code>int *divide;</code>
            ]]></Answer>
            <Answer correct="true" message="Legal."><![CDATA[
                <code>int central_sales_region_Summer_2005_gross_sales;</code>
            ]]></Answer>
        </Answers>
    </Question>
    
    <!-- *************************************************** 5 *************************************************** -->
    <Question type="MultipleChoice" title="JavaBeans Standard">
        <Text><![CDATA[
            Which method names follow the JavaBeans standard?
            ]]></Text>
        <Answers>
            <Answer message="Add can be used only with Listener methods."><![CDATA[
                <code>addSize</code>
            ]]></Answer>
            <Answer correct="true" message="Correct prefix get."><![CDATA[
                <code>getCust</code>
            ]]></Answer>
            <Answer message="Delete is not a standard JavaBeans name prefix."><![CDATA[
                <code>deleteRep</code>
            ]]></Answer>
            <Answer correct="true" message="Correct prefix is."><![CDATA[
                <code>isColorado</code>
            ]]></Answer>
            <Answer message="Put is not a standard JavaBeans name prefix."><![CDATA[
                <code>putDimensinos</code>
            ]]></Answer>
        </Answers>
    </Question>
    
    <!-- *************************************************** 6 *************************************************** -->
    <Question type="MultipleChoice" title="Variable Arguments">
        <Text><![CDATA[
            Given:
            <code>
            1. class Voop {<br />
            2.   public static void main(String[] args) {<br />
            3.     doStuff(1);<br />
            4.     doStuff(1,2);<br />
            5.   }<br />
            6.   // insert code here<br />
            7. }
            </code>
            Which, inserted independently at line 6, will compile?
            ]]></Text>
        <Answers>
            <Answer correct="true" message="Correct var-args syntax."><![CDATA[
                <code>static void doStuff(int... doArgs) { }</code>
            ]]></Answer>
            <Answer message="Invalid var-args syntax."><![CDATA[
                <code>static void doStuff(int[] doArgs) { }</code>
            ]]></Answer>
            <Answer message="Invalid var-args syntax."><![CDATA[
                <code>static void doStuff(int doArgs...) { }</code>
            ]]></Answer>
            <Answer message="The var-arg must be the last of a method's arguments."><![CDATA[
                <code>static void doStuff(int... doArgs, int y) { }</code>
            ]]></Answer>
            <Answer correct="true" message="Correct var-args syntax."><![CDATA[
                <code>static void doStuff(itn x, int... doArgs) { }</code>
            ]]></Answer>
        </Answers>
    </Question>
    
    <!-- *************************************************** 7 *************************************************** -->
    <Question type="MultipleChoice" title="Array Declaration">
        <Text><![CDATA[
            Which are legal declarations?
            ]]></Text>
        <Answers>
            <Answer correct="true" message="Correct array declarations."><![CDATA[
                <code>short x [];</code>
            ]]></Answer>
            <Answer correct="true" message="Correct array declarations."><![CDATA[
                <code>short [] y;</code>
            ]]></Answer>
            <Answer message="You can't include the size of your array in a declaration unless you also instantiate the array object."><![CDATA[
                <code>short[5] x2;</code>
            ]]></Answer>
            <Answer message="You can't include the size of your array in a declaration unless you also instantiate the array object."><![CDATA[
                <code>short z2 [5];</code>
            ]]></Answer>
            <Answer correct="true" message="Correct three dimensional array."><![CDATA[
                <code>short [] z [] [];</code>
            ]]></Answer>
            <Answer message="Invalid instantiation syntax."><![CDATA[
                <code>short [] y2 = [5];</code>
            ]]></Answer>
        </Answers>
    </Question>
    
    <!-- *************************************************** 8 *************************************************** -->
    <Question type="SingleChoice" title="Enum Types">
        <Text><![CDATA[
            Given:
            <code>
            1. enum Animals {<br />
            2.   DOG("woof"), CAT("meow"), FISH("burble");<br />
            3.   String sound;<br />
            4.   Animals(String s) { sound = s; }<br />
            5. }<br />
            6. class TestEnum {<br />
            7.   static Animals a;<br />
            8.   public static void main(String[] args) {<br />
            9.     System.out.println(a.DOG.sound + " " + a.FISH.sound);<br />
           10.   }<br />
           11. }
            </code>
            What is the result?
            ]]></Text>
        <Answers>
            <Answer correct="true" message="Enums can have constructors and variables."><![CDATA[
                <code>woof burble</code>
            ]]></Answer>
            <Answer message="These lines all use correct syntax."><![CDATA[
                Multiple compilation errors.
            ]]></Answer>
            <Answer message="These lines all use correct syntax."><![CDATA[
                Compilation fails due to an error on line 2.
            ]]></Answer>
            <Answer message="These lines all use correct syntax."><![CDATA[
                Compilation fails due to an error on line 3.
            ]]></Answer>
            <Answer message="These lines all use correct syntax."><![CDATA[
                Compilation fails due to an error on line 4.
            ]]></Answer>
            <Answer message="These lines all use correct syntax."><![CDATA[
                Compilation fails due to an error on line 9.
            ]]></Answer>
        </Answers>
    </Question>
    
    <!-- *************************************************** 9 *************************************************** -->
    <Question type="MultipleChoice" title="Nested Enum Types">
        <Text><![CDATA[
            Given:
            <code>
            1. enum A { A }<br />
            2. class E2 {<br />
            3.   enum B { B }<br />
            4.   void C() {<br />
            5.     enum D { D }<br />
            6.   }<br />
            7. }<br />
            </code>
            Which statements are true?
            ]]></Text>
        <Answers>
            <Answer message="Line 5 is the only line that will not compile, because enums cannot be local to a method."><![CDATA[
                The code compiles.
            ]]></Answer>
            <Answer message="Line 5 is the only line that will not compile, because enums cannot be local to a method."><![CDATA[
                If only line 1 is removed the code compiles. 
            ]]></Answer>
            <Answer message="Line 5 is the only line that will not compile, because enums cannot be local to a method."><![CDATA[
                If only line 3 is removed the code compiles.
            ]]></Answer>
            <Answer correct="true" message="Line 5 is the only line that will not compile, because enums cannot be local to a method."><![CDATA[
                If only line 5 is removed the code compiles.
            ]]></Answer>
            <Answer message="Line 5 is the only line that will not compile, because enums cannot be local to a method."><![CDATA[
                If lines 1 and 3 are removed the code compiles.
            ]]></Answer>
            <Answer correct="true" message="Line 5 is the only line that will not compile, because enums cannot be local to a method."><![CDATA[
                If lines 1, 3 and 5 are removed the code compiles.
            ]]></Answer>
        </Answers>
    </Question>

</QuestionCatalog>
