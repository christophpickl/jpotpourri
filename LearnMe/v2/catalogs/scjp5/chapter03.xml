<?xml version="1.0" encoding="UTF-8"?>

<QuestionCatalog title="Sun Certified Java Programmer for Java 5 - Chapter 3">

<!-- ***************************************************** 0 ***************************************************** -->
<MultipleChoiceQuestion title="C03Q01 - Try-Catch-Block">
    <Text><![CDATA[
        Given:<br />
        <code>
        class Scoop {<br />
        &nbsp;&nbsp;static int thrower() throws Exception { return 42; }<br />
        &nbsp;&nbsp;public static void main(String[] args) {<br />
        &nbsp;&nbsp;&nbsp;&nbsp;try {<br />
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int x = thrower();<br />
        &nbsp;&nbsp;&nbsp;&nbsp;} finally {<br />
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println("x = " + ++x);<br />
        } } }
        </code>
        What is the result?
    ]]></Text>
    <Answers>
        <Answer>
            <Text><![CDATA[
                <code>x = 42</code>
            ]]></Text>
            <Feedback><![CDATA[
                Incorrect, see feedbac of correct answer.
            ]]></Feedback>
        </Answer>
        <Answer>
            <Text><![CDATA[
                <code>x = 43</code>
            ]]></Text>
            <Feedback><![CDATA[
                Incorrect, see feedbac of correct answer.
            ]]></Feedback>
        </Answer>
        <Answer>
            <Text><![CDATA[
                <code>x = 44</code>
            ]]></Text>
            <Feedback><![CDATA[
                Incorrect, see feedbac of correct answer.
            ]]></Feedback>
        </Answer>
        <Answer correct="true">
            <Text><![CDATA[
                Compilation fails.
            ]]></Text>
            <Feedback><![CDATA[
                The variable <code>x</code> is only in scope within the <code>try</code> block, it's not in scope in
                the <code>catch</code> or <code>finally</code> blocks. (For the exam, get used to those horrible
                closing <code>} } }</code> .)
            ]]></Feedback>
        </Answer>
        <Answer>
            <Text><![CDATA[
                The code runs with no output.
            ]]></Text>
            <Feedback><![CDATA[
                Incorrect, see feedbac of correct answer.
            ]]></Feedback>
        </Answer>
    </Answers>
</MultipleChoiceQuestion>

<!-- ***************************************************** 02 ***************************************************** -->
<MultipleChoiceQuestion title="C03Q02 - Garbage Collection">
    <Text><![CDATA[
        Given:<br />
        <code>
        class CardBoard {<br />
        &nbsp;&nbsp;Short story = 200;<br />
        &nbsp;&nbsp;CardBoard go(CardBoard cb) {<br />
        &nbsp;&nbsp;&nbsp;&nbsp;cb = null;<br />
        &nbsp;&nbsp;&nbsp;&nbsp;return cb;<br />
        &nbsp;&nbsp;}<br />
        &nbsp;&nbsp;public static void main(String[] args) {<br />
        &nbsp;&nbsp;&nbsp;&nbsp;CardBoard c1 = new CardBoard();<br />
        &nbsp;&nbsp;&nbsp;&nbsp;CardBoard c2 = new CardBoard();<br />
        &nbsp;&nbsp;&nbsp;&nbsp;CardBoard c3 = c1.go(c2);<br />
        &nbsp;&nbsp;&nbsp;&nbsp;c1 = null;<br />
        &nbsp;&nbsp;&nbsp;&nbsp;// do stuff<br />
        } }
        </code>
        When <code>// do stuff</code> is reached, how many objects are eligible for GC?
    ]]></Text>
    <Answers>
        <Answer>
            <Text><![CDATA[
                0
            ]]></Text>
            <Feedback><![CDATA[
                Only one <code>CardBoard</code> object (<code>c1</code>) is eligible, but it has an associated Short
                wrapper object that is also eligible.
            ]]></Feedback>
        </Answer>
        <Answer>
            <Text><![CDATA[
                1
            ]]></Text>
            <Feedback><![CDATA[
                Only one <code>CardBoard</code> object (<code>c1</code>) is eligible, but it has an associated Short
                wrapper object that is also eligible.
            ]]></Feedback>
        </Answer>
        <Answer correct="true">
            <Text><![CDATA[
                2
            ]]></Text>
            <Feedback><![CDATA[
                Only one <code>CardBoard</code> object (<code>c1</code>) is eligible, but it has an associated Short
                wrapper object that is also eligible.
            ]]></Feedback>
        </Answer>
        <Answer>
            <Text><![CDATA[
                Compilation fails.
            ]]></Text>
            <Feedback><![CDATA[
                Only one <code>CardBoard</code> object (<code>c1</code>) is eligible, but it has an associated Short
                wrapper object that is also eligible.
            ]]></Feedback>
        </Answer>
        <Answer>
            <Text><![CDATA[
                It is not possible to know.
            ]]></Text>
            <Feedback><![CDATA[
                Only one <code>CardBoard</code> object (<code>c1</code>) is eligible, but it has an associated Short
                wrapper object that is also eligible.
            ]]></Feedback>
        </Answer>
        <Answer>
            <Text><![CDATA[
                An exception is thrown at runtime.
            ]]></Text>
            <Feedback><![CDATA[
                Only one <code>CardBoard</code> object (<code>c1</code>) is eligible, but it has an associated Short
                wrapper object that is also eligible.
            ]]></Feedback>
        </Answer>
    </Answers>
</MultipleChoiceQuestion>


<!-- ***************************************************** 03 ***************************************************** -->
<MultipleChoiceQuestion title="C03Q03 - Alien Invader var-args">
    <Text><![CDATA[
        Given:<br />
        <code>
        class Alien {<br />
        &nbsp;&nbsp;String invade(short ships) { return "a few"; }<br />
        &nbsp;&nbsp;String invade(short... ships) { return "many"; }<br />
        }<br />
        class Defender {<br />
        &nbsp;&nbsp;public static void main(String[] args) {<br />
        &nbsp;&nbsp;&nbsp;&nbsp;System.out.println(new Alien().invade(7));<br />
        } }
        </code>
        What is the result?
    ]]></Text>
    <Answers>
        <Answer>
            <Text><![CDATA[
                <code>many</code>
            ]]></Text>
            <Feedback><![CDATA[
                The var-args declaration is fine, but <code>invade</code> takes a <code>short</code>, so the argument
                7 needs to be cast to a <code>short</code>. With the cast, the output would be "<code>a few</code>".
            ]]></Feedback>
        </Answer>
        <Answer>
            <Text><![CDATA[
                <code>a few</code>
            ]]></Text>
            <Feedback><![CDATA[
                The var-args declaration is fine, but <code>invade</code> takes a <code>short</code>, so the argument
                7 needs to be cast to a <code>short</code>. With the cast, the output would be "<code>a few</code>".
            ]]></Feedback>
        </Answer>
        <Answer correct="true">
            <Text><![CDATA[
                Compilation fails.
            ]]></Text>
            <Feedback><![CDATA[
                The var-args declaration is fine, but <code>invade</code> takes a <code>short</code>, so the argument
                7 needs to be cast to a <code>short</code>. With the cast, the output would be "<code>a few</code>".
            ]]></Feedback>
        </Answer>
        <Answer>
            <Text><![CDATA[
                The output is not predictable.
            ]]></Text>
            <Feedback><![CDATA[
                The var-args declaration is fine, but <code>invade</code> takes a <code>short</code>, so the argument
                7 needs to be cast to a <code>short</code>. With the cast, the output would be "<code>a few</code>".
            ]]></Feedback>
        </Answer>
        <Answer>
            <Text><![CDATA[
                An exception is thrown at runtime.
            ]]></Text>
            <Feedback><![CDATA[
                The var-args declaration is fine, but <code>invade</code> takes a <code>short</code>, so the argument
                7 needs to be cast to a <code>short</code>. With the cast, the output would be "<code>a few</code>".
            ]]></Feedback>
        </Answer>
    </Answers>
</MultipleChoiceQuestion>


<!-- ***************************************************** 04 ***************************************************** -->
<MultipleChoiceQuestion title="C03Q04 - Arrays of Arrays">
    <Text><![CDATA[
        Given:<br />
        <code>
        1. class Dims {<br />
        2. &nbsp;&nbsp;publci static void main(String[] args) {<br />
        3. &nbsp;&nbsp;&nbsp;&nbsp;int[][] a = { {1,2,}, {3,4}};<br />
        4. &nbsp;&nbsp;&nbsp;&nbsp;int[] b = (int[]) a[1];<br />
        5. &nbsp;&nbsp;&nbsp;&nbsp;Object o1 = a;<br />
        6. &nbsp;&nbsp;&nbsp;&nbsp;int[][] a2 = (int[][]) o1;<br />
        7. &nbsp;&nbsp;&nbsp;&nbsp;int[] b2 = (int[]) o1;<br />
        8. &nbsp;&nbsp;&nbsp;&nbsp;System.out.println(b[1]);<br />
        9. } }
        </code>
        What is the result?
    ]]></Text>
    <Answers>
        <Answer>
            <Text><![CDATA[
                <code>2</code>
            ]]></Text>
            <Feedback><![CDATA[
                Incorrect, see feedback of correct answer.
            ]]></Feedback>
        </Answer>
        <Answer>
            <Text><![CDATA[
                <code>4</code>
            ]]></Text>
            <Feedback><![CDATA[
                Not exactly, see feedback of correct answer.
            ]]></Feedback>
        </Answer>
        <Answer correct="true">
            <Text><![CDATA[
                An exception is thrown at runtime.
            ]]></Text>
            <Feedback><![CDATA[
                A <code>ClassCastException</code> is thrown at line 7 because <code>o1</code> refers to an
                <code>int[][]</code> not an <code>int[]</code>. If line 7 was removed, the output would be 4.
            ]]></Feedback>
        </Answer>
        <Answer>
            <Text><![CDATA[
                Compilation fails due to an error on line 4.
            ]]></Text>
            <Feedback><![CDATA[
                Incorrect, see feedback of correct answer.
            ]]></Feedback>
        </Answer>
        <Answer>
            <Text><![CDATA[
                Compilation fails due to an error on line 5.
            ]]></Text>
            <Feedback><![CDATA[
                Incorrect, see feedback of correct answer.
            ]]></Feedback>
        </Answer>
        <Answer>
            <Text><![CDATA[
                Compilation fails due to an error on line 6.
            ]]></Text>
            <Feedback><![CDATA[
                Incorrect, see feedback of correct answer.
            ]]></Feedback>
        </Answer>
        <Answer>
            <Text><![CDATA[
                Compilation fails due to an error on line 7.
            ]]></Text>
            <Feedback><![CDATA[
                Incorrect, see feedback of correct answer.
            ]]></Feedback>
        </Answer>
    </Answers>
</MultipleChoiceQuestion>


<!-- ***************************************************** 05 ***************************************************** -->
<MultipleChoiceQuestion title="C03Q05 - Boxing, Var-Args, Widening">
    <Text><![CDATA[
        Given:<br />
        <code>
        class Eggs {<br />
        &nbsp;&nbsp;int doX(Long x, Long y) { return 1; }<br />
        &nbsp;&nbsp;int doX(long... x) { return 2; }<br />
        &nbsp;&nbsp;int doX(Integer x, Integer y) { return 3; }<br />
        &nbsp;&nbsp;int doX(Number n, Number m) { return 4; }<br />
        &nbsp;&nbsp;public static void main(String[] args) {<br />
        &nbsp;&nbsp;&nbsp;&nbsp;new Eggs().go();<br />
        &nbsp;&nbsp;}<br />
        &nbsp;&nbsp;void go() {<br />
        &nbsp;&nbsp;&nbsp;&nbsp;short s = 7;<br />
        &nbsp;&nbsp;&nbsp;&nbsp;System.out.print(doX(s, s) + " ");<br />
        &nbsp;&nbsp;&nbsp;&nbsp;System.out.println(doX(7, 7));<br />
        } }
        </code>
        What is the result?
    ]]></Text>
    <Answers>
        <Answer>
            <Text><![CDATA[
                <code>1 1</code>
            ]]></Text>
            <Feedback><![CDATA[
                Incorrect, see feedback of correct answer.
            ]]></Feedback>
        </Answer>
        <Answer>
            <Text><![CDATA[
                <code>2 1</code>
            ]]></Text>
            <Feedback><![CDATA[
                Incorrect, see feedback of correct answer.
            ]]></Feedback>
        </Answer>
        <Answer>
            <Text><![CDATA[
                <code>3 1</code>
            ]]></Text>
            <Feedback><![CDATA[
                Incorrect, see feedback of correct answer.
            ]]></Feedback>
        </Answer>
        <Answer>
            <Text><![CDATA[
                <code>4 1</code>
            ]]></Text>
            <Feedback><![CDATA[
                Incorrect, see feedback of correct answer.
            ]]></Feedback>
        </Answer>
        <Answer>
            <Text><![CDATA[
                <code>2 3</code>
            ]]></Text>
            <Feedback><![CDATA[
                Incorrect, see feedback of correct answer.
            ]]></Feedback>
        </Answer>
        <Answer>
            <Text><![CDATA[
                <code>3 3</code>
            ]]></Text>
            <Feedback><![CDATA[
                Incorrect, see feedback of correct answer.
            ]]></Feedback>
        </Answer>
        <Answer correct="true">
            <Text><![CDATA[
                <code>4 3</code>
            ]]></Text>
            <Feedback><![CDATA[
                Two rules apply to the first invocation of <code>doX()</code>. You can't widen and then box in one step,
                and var-args are always chosen last. Therefore you can't widen shorts to either ints or longs, and then
                box them to Integers or Longs. But you can box shorts to Shorts and then widen them to Numbers, and this
                takes priority over using a var-args method. The second invocation uses a simple box from int to
                Integer.
            ]]></Feedback>
        </Answer>
    </Answers>
</MultipleChoiceQuestion>


<!-- ***************************************************** 06 ***************************************************** -->
<MultipleChoiceQuestion title="C03Q06 - Mixing (instance) variables">
    <Text><![CDATA[
        Given:<br />
        <code>
        class Mixer {<br />
        &nbsp;&nbsp;Mixer() { }<br />
        &nbsp;&nbsp;Mixer(Mixer m) { m1 = m; }<br />
        &nbsp;&nbsp;Mixer m1;<br />
        &nbsp;&nbsp;public static void main(String[] args) {<br />
        &nbsp;&nbsp;&nbsp;&nbsp;Mixer m2 = new Mixer();<br />
        &nbsp;&nbsp;&nbsp;&nbsp;Mixer m3 = new Mixer(m2); m3.go();<br />
        &nbsp;&nbsp;&nbsp;&nbsp;Mixer m4 = m3.m1; m4.go();<br />
        &nbsp;&nbsp;&nbsp;&nbsp;Mixer m5 = m2.m1; m5.go();<br />
        &nbsp;&nbsp;}<br />
        &nbsp;&nbsp;void go() { System.out.println("hi "); }<br />
        }
        </code>
        What is the result?
    ]]></Text>
    <Answers>
        <Answer>
            <Text><![CDATA[
                <code>hi</code>
            ]]></Text>
            <Feedback><![CDATA[
                Incorrect, see feedback of correct answer.
            ]]></Feedback>
        </Answer>
        <Answer>
            <Text><![CDATA[
                <code>hi hi</code>
            ]]></Text>
            <Feedback><![CDATA[
                Incorrect, see feedback of correct answer.
            ]]></Feedback>
        </Answer>
        <Answer>
            <Text><![CDATA[
                <code>hi hi hi</code>
            ]]></Text>
            <Feedback><![CDATA[
                Incorrect, see feedback of correct answer.
            ]]></Feedback>
        </Answer>
        <Answer>
            <Text><![CDATA[
                Compilation fails.
            ]]></Text>
            <Feedback><![CDATA[
                Incorrect, see feedback of correct answer.
            ]]></Feedback>
        </Answer>
        <Answer>
            <Text><![CDATA[
                <code>hi</code>, followed by an exception.
            ]]></Text>
            <Feedback><![CDATA[
                Incorrect, see feedback of correct answer.
            ]]></Feedback>
        </Answer>
        <Answer correct="true">
            <Text><![CDATA[
                <code>hi hi</code>, followed by an exception.
            ]]></Text>
            <Feedback><![CDATA[
                The <code>m2</code> object's <code>m1</code> instance variable is never initialized,
                so when <code>m5</code> tries to use it a <code>NullPointerException</code> is thrown.
            ]]></Feedback>
        </Answer>
    </Answers>
</MultipleChoiceQuestion>


<!-- ***************************************************** 07 ***************************************************** -->
<MultipleChoiceQuestion title="C03Q07 - Array (Sub-)Types">
    <Text><![CDATA[
        Given:<br />
        <code>
        1. class Zippy {<br />
        2. &nbsp;&nbsp;String[] x;<br />
        3. &nbsp;&nbsp;int[] a [] = {{1,2}, {1}};<br />
        4. &nbsp;&nbsp;Object c = new long[4];<br />
        5. &nbsp;&nbsp;Object[] d = x;<br />
        6. }
        </code>
        What is the result?
    ]]></Text>
    <Answers>
        <Answer correct="true">
            <Text><![CDATA[
                Compilation succeeds.
            ]]></Text>
            <Feedback><![CDATA[
                All of these array declarations are legal. Lines 4 and 5 demonstrate that arrays can be cast.
            ]]></Feedback>
        </Answer>
        <Answer>
            <Text><![CDATA[
                Compilation fails due only to an error on line 3.
            ]]></Text>
            <Feedback><![CDATA[
                All of these array declarations are legal.
            ]]></Feedback>
        </Answer>
        <Answer>
            <Text><![CDATA[
                Compilation fails due only to an error on line 4.
            ]]></Text>
            <Feedback><![CDATA[
                All of these array declarations are legal.
            ]]></Feedback>
        </Answer>
        <Answer>
            <Text><![CDATA[
                Compilation fails due only to an error on line 5.
            ]]></Text>
            <Feedback><![CDATA[
                All of these array declarations are legal.
            ]]></Feedback>
        </Answer>
        <Answer>
            <Text><![CDATA[
                Compilation fails due to errors on line 3 and 5.
            ]]></Text>
            <Feedback><![CDATA[
                All of these array declarations are legal.
            ]]></Feedback>
        </Answer>
        <Answer>
            <Text><![CDATA[
                Compilation fails due to errors on line 3, 4 and 5.
            ]]></Text>
            <Feedback><![CDATA[
                All of these array declarations are legal.
            ]]></Feedback>
        </Answer>
    </Answers>
</MultipleChoiceQuestion>


<!-- ***************************************************** 08 ***************************************************** -->
<MultipleChoiceQuestion title="C03Q08 - Final Fizz Switching">
    <Text><![CDATA[
        Given:<br />
        <code>
        class Fizz {<br />
        &nbsp;&nbsp;int x = 5;<br />
        &nbsp;&nbsp;public static void main(String[] args) {<br />
        &nbsp;&nbsp;&nbsp;&nbsp;final Fizz f1 = new Fizz();<br />
        &nbsp;&nbsp;&nbsp;&nbsp;Fizz f2 = new Fizz();<br />
        &nbsp;&nbsp;&nbsp;&nbsp;Fizz f3 = FizzSwitch(f1, f2);<br />
        &nbsp;&nbsp;&nbsp;&nbsp;System.out.println((f1 == f3) + " " + (f1.x == f3.x));<br />
        &nbsp;&nbsp;}<br />
        &nbsp;&nbsp;static Fizz FizzSwitch(Fizz x, Fizz y) {<br />
        &nbsp;&nbsp;&nbsp;&nbsp;final Fizz z = x;<br />
        &nbsp;&nbsp;&nbsp;&nbsp;z.x = 6;<br />
        &nbsp;&nbsp;&nbsp;&nbsp;return z;<br />
        } }
        </code>
    ]]></Text>
    <Answers>
        <Answer correct="true">
            <Text><![CDATA[
                <code>true true</code>
            ]]></Text>
            <Feedback><![CDATA[
                The references <code>f1</code>, <code>z</code> and <code>f3</code> all refer to the same instance of
                <code>Fizz</code>. The <code>final</code> modifier assures that a reference variable cannot be referred
                to a different object, but <code>final</code> doesn't keep the object's state from changing.
            ]]></Feedback>
        </Answer>
        <Answer>
            <Text><![CDATA[
                <code>false true</code>
            ]]></Text>
            <Feedback><![CDATA[
                Incorrect, see feedback of correct answer.
            ]]></Feedback>
        </Answer>
        <Answer>
            <Text><![CDATA[
                <code>true false</code>
            ]]></Text>
            <Feedback><![CDATA[
                Incorrect, see feedback of correct answer.
            ]]></Feedback>
        </Answer>
        <Answer>
            <Text><![CDATA[
                <code>false false</code>
            ]]></Text>
            <Feedback><![CDATA[
                Incorrect, see feedback of correct answer.
            ]]></Feedback>
        </Answer>
        <Answer>
            <Text><![CDATA[
                Compilation fails.
            ]]></Text>
            <Feedback><![CDATA[
                Incorrect, see feedback of correct answer.
            ]]></Feedback>
        </Answer>
        <Answer>
            <Text><![CDATA[
                An exception is thrown at runtime.
            ]]></Text>
            <Feedback><![CDATA[
                Incorrect, see feedback of correct answer.
            ]]></Feedback>
        </Answer>
    </Answers>
</MultipleChoiceQuestion>


<!-- ***************************************************** 09 ***************************************************** -->
<MultipleChoiceQuestion title="C03Q09 - Too many tooth variables">
    <Text><![CDATA[
        Given:<br />
        <code>
        class Knowing {<br />
        &nbsp;&nbsp;static final long tooth = 343L;<br />
        &nbsp;&nbsp;static long doIt(long tooth) {<br />
        &nbsp;&nbsp;&nbsp;&nbsp;System.out.print(++tooth + " ");<br />
        &nbsp;&nbsp;&nbsp;&nbsp;return ++tooth;<br />
        &nbsp;&nbsp;}<br />
        &nbsp;&nbsp;public static void main(String[] args) {<br />
        &nbsp;&nbsp;&nbsp;&nbsp;System.out.print(tooth + " ");<br />
        &nbsp;&nbsp;&nbsp;&nbsp;final long tooth = 340L;<br />
        &nbsp;&nbsp;&nbsp;&nbsp;new Knowing().doIt(tooth);<br />
        &nbsp;&nbsp;&nbsp;&nbsp;System.out.println(tooth);<br />
        } }
        </code>
        What is the result?
    ]]></Text>
    <Answers>
        <Answer>
            <Text><![CDATA[
                <code>343 340 340</code>
            ]]></Text>
            <Feedback><![CDATA[
                Incorrect, see feedback of correct answer.
            ]]></Feedback>
        </Answer>
        <Answer>
            <Text><![CDATA[
                <code>343 340 342</code>
            ]]></Text>
            <Feedback><![CDATA[
                Incorrect, see feedback of correct answer.
            ]]></Feedback>
        </Answer>
        <Answer>
            <Text><![CDATA[
                <code>343 341 342</code>
            ]]></Text>
            <Feedback><![CDATA[
                Incorrect, see feedback of correct answer.
            ]]></Feedback>
        </Answer>
        <Answer correct="true">
            <Text><![CDATA[
                <code>343 341 340</code>
            ]]></Text>
            <Feedback><![CDATA[
                There are three different <code>long</code> variables named <code>tooth</code>. Remember that you can
                apply the <code>final</code> modifier to local variables, but in this case the 2 versions of
                <code>tooth</code> marked <code>final</code> are not changed. The only <code>tooth</code> whose value
                changes is the one not marked <code>final</code>. This program demonstrates a bad practice known as
                shadowing (reusing already used names).
            ]]></Feedback>
        </Answer>
        <Answer>
            <Text><![CDATA[
                <code>343 341 343</code>
            ]]></Text>
            <Feedback><![CDATA[
                Incorrect, see feedback of correct answer.
            ]]></Feedback>
        </Answer>
        <Answer>
            <Text><![CDATA[
                Compilation fails.
            ]]></Text>
            <Feedback><![CDATA[
                Incorrect, see feedback of correct answer.
            ]]></Feedback>
        </Answer>
        <Answer>
            <Text><![CDATA[
                An exception is thrown at runtime.
            ]]></Text>
            <Feedback><![CDATA[
                Incorrect, see feedback of correct answer.
            ]]></Feedback>
        </Answer>
    </Answers>
</MultipleChoiceQuestion>


<!-- ***************************************************** 10 ***************************************************** -->
<MultipleChoiceQuestion title="C03Q10 - The Garbage Collector">
    <Text><![CDATA[
        Which is true? (Choose all that apply.)
    ]]></Text>
    <Answers>
        <Answer>
            <Text><![CDATA[
                The invocation of an object's <code>finalize()</code> method is always the last thing that happens
                before an object is garbage collected (GCed).
            ]]></Text>
            <Feedback><![CDATA[
                The first time an object's <code>finalize()</code> method runs, the object is saved from the GC, then
                the second time that object is about to be GCed, <code>finalize()</code> will not run.
            ]]></Feedback>
        </Answer>
        <Answer>
            <Text><![CDATA[
                When a stack variable goes out of scope, it is eligible for GC.
            ]]></Text>
            <Feedback><![CDATA[
                Stack variables are not dealt with by the GC.
            ]]></Feedback>
        </Answer>
        <Answer correct="true">
            <Text><![CDATA[
                Some reference variables live on the stack, and some live on the heap.
            ]]></Text>
            <Feedback><![CDATA[
                When an object has a reference variable, the references variable lives inside the object, on the heap.
            ]]></Feedback>
        </Answer>
        <Answer>
            <Text><![CDATA[
                Only objects that have no reference variables referring to them can be eligible for GC.
            ]]></Text>
            <Feedback><![CDATA[
                Objects can live in "islands of isolation" and be GC eligible.
            ]]></Feedback>
        </Answer>
        <Answer correct="true">
            <Text><![CDATA[
                It's possible to request the GC via methods in either <code>java.lang.Runtime</code> or
                <code>java.lang.System</code> classes.
            ]]></Text>
            <Feedback><![CDATA[
                For this purpose, the methods <code>System.gc()</code> and <code>Runtime.getRuntime().gc()</code> are
                available.
            ]]></Feedback>
        </Answer>
    </Answers>
</MultipleChoiceQuestion>


<!-- ***************************************************** 11 ***************************************************** -->
<MultipleChoiceQuestion title="C03Q11 - Autoboxing with Java 4">
    <Text><![CDATA[
        Given:<br />
        <code>
        01. class Convert {<br />
        02. &nbsp;&nbsp;public static void main(String[] args) {<br />
        03. &nbsp;&nbsp;&nbsp;&nbsp;Long xL = new Long(456L);<br />
        04. &nbsp;&nbsp;&nbsp;&nbsp;long x1 = Long.valueOf("123");<br />
        05. &nbsp;&nbsp;&nbsp;&nbsp;Long x2 = Long.valueOf("123");<br />
        06. &nbsp;&nbsp;&nbsp;&nbsp;long x3 = xL.longValue();<br />
        07. &nbsp;&nbsp;&nbsp;&nbsp;Long x4 = xL.longValue();<br />
        08. &nbsp;&nbsp;&nbsp;&nbsp;Long x5 = Long.parseLong("456");<br />
        09. &nbsp;&nbsp;&nbsp;&nbsp;long x6 = Long.parseLong("123");<br />
        10. &nbsp;&nbsp;}<br />
        11. }
        </code>
        Which will compile using Java 5, but will NOT compile using Java 1.4? (Choose all that apply.)
    ]]></Text>
    <!--
    Long.parseLong(String): long
    Long.valueOf(String): Long
    new Long(String/long).longValue(): long
    -->
    <Answers>
        <Answer correct="true">
            <Text><![CDATA[
                Line 4.
            ]]></Text>
            <Feedback><![CDATA[
                Because of the method's return types, these method calls required autoboxing to compile.
            ]]></Feedback>
        </Answer>
        <Answer>
            <Text><![CDATA[
                Line 5.
            ]]></Text>
            <Feedback><![CDATA[
                Incorrect, see feedbac of correct answers.
            ]]></Feedback>
        </Answer>
        <Answer>
            <Text><![CDATA[
                Line 6.
            ]]></Text>
            <Feedback><![CDATA[
                Incorrect, see feedbac of correct answers.
            ]]></Feedback>
        </Answer>
        <Answer correct="true">
            <Text><![CDATA[
                Line 7.
            ]]></Text>
            <Feedback><![CDATA[
                Because of the method's return types, these method calls required autoboxing to compile.
            ]]></Feedback>
        </Answer>
        <Answer correct="true">
            <Text><![CDATA[
                Line 8.
            ]]></Text>
            <Feedback><![CDATA[
                Because of the method's return types, these method calls required autoboxing to compile.
            ]]></Feedback>
        </Answer>
        <Answer>
            <Text><![CDATA[
                Line 9.
            ]]></Text>
            <Feedback><![CDATA[
                Incorrect, see feedbac of correct answers.
            ]]></Feedback>
        </Answer>
    </Answers>
</MultipleChoiceQuestion>


<!-- ***************************************************** 12 ***************************************************** -->
<MultipleChoiceQuestion title="C03Q12 - Eligible for GC">
    <Text><![CDATA[
        Given:<br />
        <code>
        01. class Eco {<br />
        02. &nbsp;&nbsp;public static void main(String[] args) {<br />
        03. &nbsp;&nbsp;&nbsp;&nbsp;Eco e1 = new Eco();<br />
        04. &nbsp;&nbsp;&nbsp;&nbsp;Eco e2 = new Eco();<br />
        05. &nbsp;&nbsp;&nbsp;&nbsp;Eco e3 = new Eco();<br />
        06. &nbsp;&nbsp;&nbsp;&nbsp;e3.e = e2;<br />
        07. &nbsp;&nbsp;&nbsp;&nbsp;e1.e = e3;<br />
        08. &nbsp;&nbsp;&nbsp;&nbsp;e2 = null;<br />
        09. &nbsp;&nbsp;&nbsp;&nbsp;e3 = null;<br />
        10. &nbsp;&nbsp;&nbsp;&nbsp;e2.e = e1;<br />
        11. &nbsp;&nbsp;&nbsp;&nbsp;e1 = null;<br />
        12. &nbsp;&nbsp;}<br />
        13. &nbsp;&nbsp;Eco e;<br />
        14. }
        </code>
        At what point is only a single object eligible for GC?
    ]]></Text>
    <Answers>
        <Answer>
            <Text><![CDATA[
                After line 8 runs.
            ]]></Text>
            <Feedback><![CDATA[
                Incorrect, see feedback of correct answer.
            ]]></Feedback>
        </Answer>
        <Answer>
            <Text><![CDATA[
                After line 9 runs.
            ]]></Text>
            <Feedback><![CDATA[
                Incorrect, see feedback of correct answer.
            ]]></Feedback>
        </Answer>
        <Answer>
            <Text><![CDATA[
                After line 10 runs.
            ]]></Text>
            <Feedback><![CDATA[
                Incorrect, see feedback of correct answer.
            ]]></Feedback>
        </Answer>
        <Answer>
            <Text><![CDATA[
                After line 11 runs.
            ]]></Text>
            <Feedback><![CDATA[
                Incorrect, see feedback of correct answer.
            ]]></Feedback>
        </Answer>
        <Answer>
            <Text><![CDATA[
                Compilation fails.
            ]]></Text>
            <Feedback><![CDATA[
                Incorrect, see feedback of correct answer.
            ]]></Feedback>
        </Answer>
        <Answer>
            <Text><![CDATA[
                Never in this program.
            ]]></Text>
            <Feedback><![CDATA[
                Incorrect, see feedback of correct answer.
            ]]></Feedback>
        </Answer>
        <Answer correct="true">
            <Text><![CDATA[
                An exception is thrown at runtime.
            ]]></Text>
            <Feedback><![CDATA[
                An error at line 10 causes a <code>NullPointerException</code> to be thrown because <code>e2</code>
                was set to <code>null</code> in line 8. If lien 10 was moved between lines 7 and 8, then "Compilation
                fails" would be corect, because until the last reference is nulled none of the objects is eligible,
                and once the last reference is nulled, all three are eligible.
            ]]></Feedback>
        </Answer>
    </Answers>
</MultipleChoiceQuestion>


<!-- ***************************************************** 13 ***************************************************** -->
<MultipleChoiceQuestion title="C03Q13 - Accessing Enums">
    <Text><![CDATA[
        Given:<br />
        <code>
        1. class Bigger {<br />
        2. &nbsp;&nbsp;public static void main(String[] args) {<br />
        3. &nbsp;&nbsp;// insert code here<br />
        4. &nbsp;&nbsp;}<br />
        5. }<br />
        6. class Better {<br />
        7. &nbsp;&nbsp;enum Faster {Higher, Longer};<br />
        8. }
        </code>
        Which, inserted independently at line 3, will compile? (Choose all that apply.)
    ]]></Text>
    <Answers>
        <Answer>
            <Text><![CDATA[
                <code>Faster f = Faster.Higher;</code>
            ]]></Text>
            <Feedback><![CDATA[
                Incorrect syntax.
            ]]></Feedback>
        </Answer>
        <Answer>
            <Text><![CDATA[
                <code>Faster f = Better.Faster.Higher;</code>
            ]]></Text>
            <Feedback><![CDATA[
                Incorrect syntax.
            ]]></Feedback>
        </Answer>
        <Answer correct="true">
            <Text><![CDATA[
                <code>Better.Faster f = Better.Faster.Higher;</code>
            ]]></Text>
            <Feedback><![CDATA[
                Correct syntax for accessing an enum from another class.
            ]]></Feedback>
        </Answer>
        <Answer>
            <Text><![CDATA[
                <code>Bigger.Faster f = Bigger.Faster.Higher;</code>
            ]]></Text>
            <Feedback><![CDATA[
                Incorrect syntax.
            ]]></Feedback>
        </Answer>
        <Answer correct="true">
            <Text><![CDATA[
                <code>Better.Faster f2; f2 = Better.Faster.Longer;</code>
            ]]></Text>
            <Feedback><![CDATA[
                Correct syntax for accessing an enum from another class.
            ]]></Feedback>
        </Answer>
        <Answer>
            <Text><![CDATA[
                <code>Better b; b.Faster = f3; f3 = Better.Faster.Longer;</code>
            ]]></Text>
            <Feedback><![CDATA[
                Incorrect syntax.
            ]]></Feedback>
        </Answer>
    </Answers>
</MultipleChoiceQuestion>


<!-- ***************************************************** 14 ***************************************************** -->
<MultipleChoiceQuestion title="C03Q14 - Order of Blocks">
    <Text><![CDATA[
        Given:<br />
        <code>
        class Bird {<br />
        &nbsp;&nbsp;{ System.out.print("b1 "); }<br />
        &nbsp;&nbsp;public Bird() { System.out.print("b2 "); }<br />
        }<br />
        class Raptor extends Bird {<br />
        &nbsp;&nbsp;static { System.out.print("r1 "); }<br />
        &nbsp;&nbsp;public Raptor() { System.out.print("r2 "); }<br />
        &nbsp;&nbsp;{ System.out.print("r3 "); }<br />
        &nbsp;&nbsp;static { System.out.print("r4 "); }<br />
        }<br />
        class Hawk extends Raptor {<br />
        &nbsp;&nbsp;public static void main(String[] args) {<br />
        &nbsp;&nbsp;&nbsp;&nbsp;System.out.print("pre ");<br />
        &nbsp;&nbsp;&nbsp;&nbsp;new Hawk();<br />
        &nbsp;&nbsp;&nbsp;&nbsp;System.out.println("hawk ");<br />
        &nbsp;&nbsp;}<br />
        }
        </code>
        What is the result?
    ]]></Text>
    <Answers>
        <Answer>
            <Text><![CDATA[
                <code>pre b1 b2 r3 r2 hawk</code>
            ]]></Text>
            <Feedback><![CDATA[
                Incorrect, see feedback of correct answer.
            ]]></Feedback>
        </Answer>
        <Answer>
            <Text><![CDATA[
                <code>pre b2 b1 r2 r3 hawk</code>
            ]]></Text>
            <Feedback><![CDATA[
                Incorrect, see feedback of correct answer.
            ]]></Feedback>
        </Answer>
        <Answer>
            <Text><![CDATA[
                <code>pre b2 b1 re2 r3 hawk r1 r4</code>
            ]]></Text>
            <Feedback><![CDATA[
                Incorrect, see feedback of correct answer.
            ]]></Feedback>
        </Answer>
        <Answer correct="true">
            <Text><![CDATA[
                <code>r1 r4 pre b1 b2 r3 r2 hawk</code>
            ]]></Text>
            <Feedback><![CDATA[
                Static init blocks are executed at class loading time, instance init blocks run right after the call to
                <code>super()</code> in a constructor. When multiple init blocks of a single type occur in a class, they
                run in order, from the top down.
            ]]></Feedback>
        </Answer>
        <Answer>
            <Text><![CDATA[
                <code>r1 r4 pre b2 b1 r2 r3 hawk</code>
            ]]></Text>
            <Feedback><![CDATA[
                Incorrect, see feedback of correct answer.
            ]]></Feedback>
        </Answer>
        <Answer>
            <Text><![CDATA[
                <code>pre r1 r4 b1 b2 r3 r2 hawk</code>
            ]]></Text>
            <Feedback><![CDATA[
                Incorrect, see feedback of correct answer.
            ]]></Feedback>
        </Answer>
        <Answer>
            <Text><![CDATA[
                <code>pre r1 r4 b2 b1 r2 r3 hawk</code>
            ]]></Text>
            <Feedback><![CDATA[
                Incorrect, see feedback of correct answer.
            ]]></Feedback>
        </Answer>
        <Answer>
            <Text><![CDATA[
                The order of output cannot be predicted.
            ]]></Text>
            <Feedback><![CDATA[
                Incorrect, see feedback of correct answer.
            ]]></Feedback>
        </Answer>
        <Answer>
            <Text><![CDATA[
                Compilation fails.
            ]]></Text>
            <Feedback><![CDATA[
                Incorrect, see feedback of correct answer.
            ]]></Feedback>
        </Answer>
    </Answers>
</MultipleChoiceQuestion>

</QuestionCatalog>
