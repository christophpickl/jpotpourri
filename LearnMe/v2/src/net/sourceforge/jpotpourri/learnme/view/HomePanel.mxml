<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml"
	width="100%" height="100%" horizontalAlign="center" verticalAlign="middle">
	
	<mx:Script>
		<![CDATA[
			import net.sourceforge.jpotpourri.learnme.dao.DaoLocator;
			import net.sourceforge.jpotpourri.learnme.xml.CatalogParser;
			import net.sourceforge.jpotpourri.learnme.vo.IQuestionCatalog;
			import net.sourceforge.jpotpourri.learnme.vo.ICheckedQuestion;
			import net.sourceforge.jpotpourri.learnme.vo.MultipleChoiceCheckedQuestion;
			import net.sourceforge.jpotpourri.learnme.vo.MultipleChoiceSourceAnswer;
			import net.sourceforge.jpotpourri.learnme.vo.MultipleChoiceSourceQuestion;
			import mx.collections.ArrayCollection;
			import net.sourceforge.jpotpourri.learnme.vo.Questionairy;
			import net.sourceforge.jpotpourri.learnme.vo.IQuestionary;
			import net.sourceforge.jpotpourri.learnme.model.ModelLocator;
			
			public function onDatabaseConnectionEstablished(): void {
				DaoLocator.instance.catalogDao.selectCatalogs(onCatalogsFetched);
			}
			
			/** ArrayCollection<IQuestionCatalog> */
			private function onCatalogsFetched(catalogs: ArrayCollection): void {
				this.catalogsDataGrid.dataProvider = catalogs;
			}
			
			private function doStartQuestionairy(): void {
				const catalog:IQuestionCatalog = IQuestionCatalog(this.catalogsDataGrid.selectedItem);
				const checkedQuestions: ArrayCollection = new ArrayCollection();
				for each(var question: MultipleChoiceSourceQuestion in catalog.sourceQuestions) {
					checkedQuestions.addItem(new MultipleChoiceCheckedQuestion(question));
				}
				const questionairy: IQuestionary = new Questionairy(checkedQuestions);
				
				ModelLocator.instance.questionairy = questionairy;
				ModelLocator.instance.currentQuestion = ICheckedQuestion(questionairy.checkedQuestions.getItemAt(0));
				parentApplication.currentState = 'Questionairy';
			}
			
			private function gridLabelQuestions(item: Object, column: DataGridColumn):String {
				const catalog: IQuestionCatalog = IQuestionCatalog(item);
				return "" + catalog.sourceQuestions.length;
			}
			
			
		]]>
	</mx:Script>
	
	<mx:DataGrid id="catalogsDataGrid" width="100%" height="100%">
		<mx:columns>
			<mx:DataGridColumn headerText="Title" dataField="title" />
			<mx:DataGridColumn headerText="Questions" width="70"
				labelFunction="gridLabelQuestions" textAlign="right" />
		</mx:columns>
	</mx:DataGrid>
	
	<mx:HBox>
		<mx:Button label="Start Questionairy" click="doStartQuestionairy()" enabled="{this.catalogsDataGrid.selectedItem != null}" />
		<mx:Button label="Refresh Data" click="onDatabaseConnectionEstablished()" />
	</mx:HBox>
	
</mx:VBox>
