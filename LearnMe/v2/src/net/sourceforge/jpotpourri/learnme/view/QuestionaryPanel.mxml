<?xml version="1.0" encoding="utf-8"?>
<mx:VBox width="100%" height="100%" horizontalAlign="center"
	creationComplete="onCreationComplete()" addedToStage="onAddedToStage()"
	xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns:view="net.sourceforge.jpotpourri.learnme.view.*">
	
	<mx:Script>
		<![CDATA[
			import mx.binding.utils.BindingUtils;
			import logging.Logger;
			import net.sourceforge.jpotpourri.learnme.vo.ICheckedQuestion;
			import mx.events.ItemClickEvent;
			import net.sourceforge.jpotpourri.learnme.model.ModelLocator;
			import net.sourceforge.jpotpourri.learnme.vo.IQuestionary;
			
			private static const LOG:Logger = Logger.getLogger("QuestionaryPanel");
			
			private const model: ModelLocator = ModelLocator.instance;
			
			private function onAddedToStage(): void {
				if(this.buttonBar != null) {
					this.refreshView();
				}
			}
			
			private function onCreationComplete(): void {
				this.refreshView();
			}
			
			private function refreshView(): void {
				LOG.finest("refreshing view (buttn bar enabling)");
				Object(buttonBar.getChildAt(0)).enabled = false;
				Object(buttonBar.getChildAt(1)).enabled = (model.questionary.checkedQuestions.length > 1);
			}
			
			private function onButtonBarClick(event:ItemClickEvent):void {
				
	            var currentQuestion: ICheckedQuestion = model.currentQuestion;
	            const questionIndex: int = model.questionary.checkedQuestions.getItemIndex(currentQuestion);
	            if(questionIndex == -1) {
	            	throw new Error("Could not get index of item: " + currentQuestion);
	            }
	            
	            var newQuestionIndex: int = -1;
		        if(event.label == "Prev") {
		        	if(questionIndex == 0) {
		        		LOG.finer("Prev disabled, because index == min");
		        	} else {
		        		newQuestionIndex = questionIndex - 1;
		        	}
		  		} else if(event.label == "Next") {
		  			if(questionIndex == (model.questionary.checkedQuestions.length - 1)) {
		        		LOG.finer("Next disabled, because index == max");
		        	} else {
		        		newQuestionIndex = questionIndex + 1;
		        	}
		  		}
		  		
		  		if(newQuestionIndex != -1) {
		  			model.currentQuestion = ICheckedQuestion(model.questionary.checkedQuestions.getItemAt(newQuestionIndex));
		  			
		  			Button(buttonBar.getChildAt(0)).enabled = (newQuestionIndex > 0);
		  			Button(buttonBar.getChildAt(1)).enabled = (newQuestionIndex < (model.questionary.checkedQuestions.length-1));
		  			
		  		}
		  		
			}
			
			private function doFinishQuestionairy(): void {
				parentApplication.currentState = "QuestionairyFinish";
			}
			
		]]>
	</mx:Script>
	
	
	<view:QuestionPanel width="100%" height="100%" />
	
	<mx:HBox width="100%" bottom="0">
		
		<mx:Button label="Abort Questionairy" click="parentApplication.currentState=''" />
		
		<mx:Spacer width="100%" />
		
		<mx:ButtonBar id="buttonBar" itemClick="onButtonBarClick(event)">
	        <mx:dataProvider>
	            <mx:Array>
	                <mx:Object label="Prev" />
	                <mx:Object label="Next" />
	            </mx:Array>
	        </mx:dataProvider>
	    </mx:ButtonBar>
	    
	    <mx:Label text="{model.questionary.checkedQuestions.getItemIndex(model.currentQuestion) + 1} / {model.questionary.checkedQuestions.length}" />
		
		<mx:Spacer width="100%" />
		
		<mx:Button label="Finish Questionairy" click="doFinishQuestionairy()"
			enabled="{model.questionary.checkedQuestions.getItemIndex(model.currentQuestion) == (model.questionary.checkedQuestions.length-1)}" />
		
	</mx:HBox>
	
	
					
</mx:VBox>
